version: '3'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    user: "0:0"
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    # networks:
    #   - kafka-net

  kafka:
    image: confluentinc/cp-kafka:latest
    user: "0:0"
    container_name: kafka
    ports:
      - "9093:9093"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181

      #
      # KAFKA_ADVERTISED_HOST_NAME: localhost

      KAFKA_LISTENERS: INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      # KAFKA_LISTENERS: "PLAINTEXT://:29092,PLAINTEXT_HOST://:9092"
      # KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      # KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT

      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      # KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT

      KAFKA_CREATE_TOPICS: "example-topic:1:1"

      # KAFKA_OFFSET_TOPIC_REPLICATION_FACTOR: 1
      # KAFKA_TRANSACTION_STATE_LOG_TOPIC_REPLICATION_FACTOR: 1
      # KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
    depends_on:
      - zookeeper
    # networks:
    #   - kafka-net

  consumer:
    build:
      context: ./consumer
      dockerfile: Dockerfile
    volumes: 
      - ./consumer/prova.txt:/app/prova.txt 
    depends_on:
      - kafka
    restart: on-failure
    # networks:
    #   - kafka-net

  producer:
    build:
      context: ./producer
      dockerfile: Dockerfile
    depends_on:
      - kafka
      # - consumer
    restart: on-failure
    # networks:
    #   - kafka-net

  

# networks:
#   kafka-net:
#     driver: bridge





