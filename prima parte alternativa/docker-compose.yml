version: '3'

services:
  postgres:
      image: postgres:16.1 
      container_name: postgres
      ports:
        - 5432:5432
      environment:
        - POSTGRES_HOST=${POSTGRES_HOST}
        - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
        - POSTGRES_DATABASE=${POSTGRES_DATABASE}
        - POSTGRES_USER=${POSTGRES_USER}
        
      volumes:
        - ./postgres-data:/var/lib/postgresql/data
      networks:
        - weather-net

  database-service:
    build: ./database_service
    environment:
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DATABASE=${POSTGRES_DATABASE}
    ports: 
      - "5004:5004"
    depends_on:
      - postgres
    networks:
      - weather-net
    restart: on-failure

  weather-event-notifier:
    build:
      context: ./weather-event-notifier
      dockerfile: Dockerfile
    environment:
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DATABASE=${POSTGRES_DATABASE}
    ports:
      - "5001:5001"
    networks:
      - weather-net
    depends_on:
      - postgres
    restart: on-failure

  notification-service:
    build:
      context: ./notification-service
      dockerfile: Dockerfile
    environment:
      - TELEGRAM_TOKEN_FILE=${TELEGRAM_TOKEN_FILE}
    ports:
      - "5000:5000"
    networks:
      - weather-net
    depends_on:
      - postgres
    restart: on-failure

  weather-data-fetcher:
    build:
      context: ./weather-data-fetcher
      dockerfile: Dockerfile
    environment:
      - OPENWEATHERMAP_API_KEY_FILE=${OPENWEATHERMAP_API_KEY_FILE}
    networks:
      - weather-net
    depends_on:
      - postgres
      - weather-event-notifier
    restart: on-failure

networks:
  weather-net:





